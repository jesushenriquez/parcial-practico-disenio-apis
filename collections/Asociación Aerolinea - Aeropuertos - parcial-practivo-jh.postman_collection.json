{
	"info": {
		"_postman_id": "fbde9e6a-9595-4502-890d-a4f851564e36",
		"name": "Asociación Aerolinea - Aeropuertos - parcial-practivo-jh",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10850197"
	},
	"item": [
		{
			"name": "Asociar un aeropuerto a una aerolínea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado 201 OK\", function () {",
							"  pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Aeropuerto asociado\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.aeropuertos).to.be.an('array');",
							"  pm.expect(jsonData.aeropuertos.some(a => a.id === 1)).to.be.true;",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/airlines/1/airports/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"airlines",
						"1",
						"airports",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Asociar un aeropuerto que no existe a una aerolínea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado 404 Not Found\", function () {",
							"  pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Mensaje de error correcto\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.message).to.include(\"Aeropuerto no encontrado\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/airlines/1/airports/9999",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"airlines",
						"1",
						"airports",
						"9999"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un aeropuerto previamente asociado a una aerolínea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado 200 OK\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/airlines/1/airports/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"airlines",
						"1",
						"airports",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un aeropuerto que no estaba previamente asociado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado 404 Not Found\", function () {",
							"  pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Mensaje de error correcto\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.message).to.include(\"El aeropuerto no está asociado a la aerolínea\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/airlines/1/airports/9999",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"airlines",
						"1",
						"airports",
						"9999"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar los aeropuertos asociados a una aerolínea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado 200 OK\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Aeropuertos actualizados\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.aeropuertos.length).to.eql(2);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"aeropuertosIds\": [\n        1,\n        2\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/airlines/1/airports",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"airlines",
						"1",
						"airports"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar los aeropuertos asociados con un aeropuerto inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado 404 Not Found\", function () {",
							"  pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Mensaje de error correcto\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.message).to.include(\"Uno o más aeropuertos no existen\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"aeropuertosIds\": [\n        9999\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/airlines/1/airports",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"airlines",
						"1",
						"airports"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todos los aeropuertos que cubre una aerolínea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado 200 OK\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Respuesta es un array\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData).to.be.an('array');",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/airlines/1/airports",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"airlines",
						"1",
						"airports"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un aeropuerto asociado a una aerolínea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado 200 OK\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Aeropuerto correcto\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.id).to.eql(1);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/airlines/1/airports/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"airlines",
						"1",
						"airports",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un aeropuerto que no esté asociado a una aerolínea",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estado 404 Not Found\", function () {",
							"  pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Mensaje de error correcto\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.message).to.include(\"El aeropuerto no está asociado a la aerolínea\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/airlines/1/airports/9999",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"airlines",
						"1",
						"airports",
						"9999"
					]
				}
			},
			"response": []
		}
	]
}